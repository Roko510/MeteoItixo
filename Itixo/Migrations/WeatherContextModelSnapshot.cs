// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Itixo.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AvDayData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Agl")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AstroEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AstroLen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AstroStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Bio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CivEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CivLen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CivStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DayLen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Fog")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lsp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoonPhase")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NautEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NautLen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NautStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PressureOld")
                        .HasColumnType("REAL");

                    b.Property<string>("Sunrise")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sunset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TemperatureAvg")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("today")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DayData");
                });

            modelBuilder.Entity("SensorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessages")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SensorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SensorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SensorType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
